{"meta":{"title":"shin","subtitle":null,"description":null,"author":"Shinae","url":"https://shin-ae.github.io"},"pages":[],"posts":[{"title":"c3로 그래프 그리기_02","slug":"c3-02","date":"2017-07-30T12:58:31.000Z","updated":"2017-08-02T11:52:34.536Z","comments":true,"path":"2017/07/30/c3-02/","link":"","permalink":"https://shin-ae.github.io/2017/07/30/c3-02/","excerpt":"","text":"C3로 그래프를 그려보자.1_ 저번 포스팅에는 준비를 했으니 이제 그래프를 그려봅니다.다짜고짜 코드를 가져옵니다. 본문에는 차트가 들어갈 div를 마련.1&lt;div id=\"chart\"&gt;&lt;/div&gt; 스크립트 넣는 부분에 적당한 예시의 코드를 가져온다.12345678910var chart = c3.generate(&#123; data: &#123; x: 'x', columns: [ ['x', 30, 50, 100, 230, 300, 310], ['data1', 30, 200, 100, 400, 150, 250], ['data2', 130, 300, 200, 300, 250, 450] ] &#125;&#125;); 전에도 말했지만 c3와 d3는 서버에 올리지 않으면 잘 보이니 않는다. 그래서 바로 에디터에서 서버를 구동해서 볼 수 있는 live server preview 플러그인을 사용했다. (VS code기준) 그러면 이런 모습이 보여지게 된다. 아름답다. 반응형에 데이터 위에 마우스가 오버되었을 때 말풍선도 나온다~ㅇㅁㅇ! 2_ 데이터를 적용해보자데이터를 넣는 방법은 아주 쉽다.1234data: &#123; x: 'x', url: 'data_01.csv'&#125; 데이터를 columns에서 url로 바꾸어주고 저장되어 있는 위치를 써준다. 하지만 이렇게 해서는 아직 그래프가 보여지지 않는다. 3_x축 정의데이터에 X축이 같이 있기 떄문에 x축을 정의해준다. type에는 여러가지가 있는걸까. 암튼 data 레벨에 x축 범위에 대한 axis속성을 추가한다.1234axis: &#123; x: &#123; type: 'category', &#125;, 그러면 이제 이런 모습을 볼 수 있게된다. 4_스타일 바꾸기데이터가 입혀진 그래프를 그렸으니 이제 디자인 파일과 비교하면서 스타일을 다듬으면 된다.일단 데이터 마다 점이 찍혀 있으니 그것을 빼보자.123point: &#123; show: false&#125; 그리고 x,y축의 선이 너무 진한 것 같으니 css에서 선의 색을 조절해보자.12345678910111213.c3 .c3-axis-x path,.c3 .c3-axis-x line &#123; stroke: #ddd;&#125; .c3 .c3-axis-y path,.c3 .c3-axis-y lines &#123; stroke: #ddd;&#125; .c3-ygrid-line.gridGray line &#123; stroke: #ddd;&#125; 데이터 컬러의 색도 바꿀 수 있다. 특정 데이터의 색을 바꿀 수 있지만 간단하게 패턴으로 바꿔본다.123color: &#123; pattern: ['#ff5f00', '#ffe082', '#80deeb', '#c4e0a6', '#bdaba3']&#125; 여기까지 하면 이런 데이터를 볼 수 있다. 5_ 마무리, 포멧 정리이제 거의 다 한 것 같다. 마지막으로 x축과 y축 범위? 단위를 정리해주자.y축의 단위가 %이기때문에 %를 추가해보자.axis아래에 x다음에 추가해주면 된다.1234567 y: &#123; tick: &#123; format: function(d) &#123; return d + \"%\"; &#125; &#125;,&#125; 그리고 x축의 날짜도 다 보여 줄 필요가 없으니 줄일 수 있다. axis의 x에 추가하면 된다.123tick: &#123; count: 7&#125; 마지막으로 y축의 그리드를 추가해줘야 하는데 그리드는 이렇게 추가할 수 있다.12345grid: &#123; y: &#123; show: true &#125;&#125; 그리드가 점선인데다가 여러개가 있어서 상당히 지저분해 보인다.결국 특정 y값을 정해서 그 값의 그리드만 표현하기로.1234567891011121314grid: &#123; y: &#123; lines: [&#123; value: 0, class: 'gridGray' &#125;, &#123; value: 1, class: 'gridGray' &#125;, &#123; value: 2, class: 'gridGray' &#125;] &#125;&#125; 이렇게 되면 그리고자 했던 그래프를 만날 수 있다. 최종 코드는123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt; &lt;style&gt; .c3 .c3-axis-x path, .c3 .c3-axis-x line &#123; stroke: #ddd; &#125; .c3 .c3-axis-y path, .c3 .c3-axis-y lines &#123; stroke: #ddd; &#125; .c3-ygrid-line.gridGray line &#123; stroke: #ddd; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"chart\"&gt;&lt;/div&gt; &lt;script&gt; var chart = c3.generate(&#123; data: &#123; x: 'x', url: 'data_01.csv' &#125;, axis: &#123; x: &#123; type: 'category', tick: &#123; count: 7 &#125; &#125;, y: &#123; tick: &#123; format: function(d) &#123; return d + \"%\"; &#125; &#125;, &#125; &#125;, point: &#123; show: false &#125;, color: &#123; pattern: ['#ff5f00', '#ffe082', '#80deeb', '#c4e0a6', '#bdaba3'] &#125;, grid: &#123; y: &#123; lines: [&#123; value: 0, class: 'gridGray' &#125;, &#123; value: 1, class: 'gridGray' &#125;, &#123; value: 2, class: 'gridGray' &#125;] &#125; &#125; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"html","slug":"html","permalink":"https://shin-ae.github.io/categories/html/"}],"tags":[{"name":"html, c3, graph, boolio","slug":"html-c3-graph-boolio","permalink":"https://shin-ae.github.io/tags/html-c3-graph-boolio/"}]},{"title":"c3로 그래프 그리기_01","slug":"c3","date":"2017-07-30T00:54:23.000Z","updated":"2017-08-02T11:51:57.499Z","comments":true,"path":"2017/07/30/c3/","link":"","permalink":"https://shin-ae.github.io/2017/07/30/c3/","excerpt":"","text":"현재 boolio라는 로보어드바이저의 전체적인 디자인을 담당하고 있다.불리오는 간단히 펀드 자문을 한다고 말할 수 있는데 한달에 한번씩 추천 펀드를 내놓는다.그것이 보고서의 형태로 나가는데 그 안에는 한달 동안의 수익, 추천 펀드, 일정 등이 같이 나가게 된다. 여하튼, 인디자인으로 매달 작업하던 것을 이제는 모바일과 웹 서비스로 자동화 시키는 프로젝트를 진행하고 있다. 그 서비스에 그래프가 존재하는 것은 당연했고, 일러스트로 그리던 그래프를 웹에 옮기는 작업이 필요했다.여태 D3.js를 배우면서 그래프 그리는 연습을 했지만 D3는 자율도가 높은 반면 자바스크립트를 모르는 사람에게는 어느정도의 진입장벽이 존재. D3로 시도는 해보았지만 그래프가 잘 나타나지 않았다. 거기에 반응형으로 디자인을 해야했기 때문에 난감했던 상황. 그 와중에 C3.js라는 D3기반의 좀 더 쉬운 라이브러리를 발견. 썰이 길었다. 이제 준비를 시작하자!1_ C3.js를 살펴보자c3는 나같은 사람들을 위해서 굉장히 쉽다. 기본이 반응형이고 디자인도 깔끔하게 되어있어 많이 손댈 필요도 없다. 다만 d3와 마찮가지로 서버에 올려야 확인이 가능하다는 단점이 있는데 이 부분은 데이터를 다른 파일에서 불러오지 않고 내부에 입력하면 확인 가능하다. 인덱스에서 보면 기본적으로 제공하는 디자인을 볼 수 있다. 깔끔하다.메뉴의 examples에서 보면 다양한 예시의 그래프를 볼 수 있다. c3에서 기본적으로 제공하고 있는 데이터들. 하나하나 들여다 보면 참 심플하고 예쁘다.여기에서 내가 필요했던 것은 라인 그래프! 기본적으로 디자인 파일이 있다면 쓰기 더 쉬워진다. 나는 여태까지 썼던 그래프의 디자인(일러스트로 제작)이 있었기 때문에 그 그래프를 구현해 보기로 했다. 2_ 데이터 정리한번 쓰고 말것이 아니라 매달 써야하기 때문에 나는 데이터 파일을 넣을 수 있는 포맷이 필요했다.일단, 내가 가진 데이터는 엑셀로 있는 파일이었는데 엑셀 파일에서 제일 쉽게 변형할 수 있는 데이터 파일은 .CSV파일이다. 아래로 데이터가 나열되는 형태의 엑셀파일. 다른이름 으로 저장을 누르고 csv파일로 저장을 누른다. 그러면 들어갈 데이터 형태는 준비가 되었다. 3_ 그럼 c3를 코딩해보자.c3는 d3를 기반으로 하고 있기 때문에 d3아래에 위치해야한다. 각 홈페이지에서 받아서 import시켜준다. c3는 스타일시트도 있기 때문에 그것도 받아서 같이 넣어준다.123456&lt;!-- Load c3.css --&gt;&lt;link href=\"/path/to/c3.css\" rel=\"stylesheet\"&gt;&lt;!-- Load d3.js and c3.js --&gt;&lt;script src=\"/path/to/d3.v3.min.js\" charset=\"utf-8\"&gt;&lt;/script&gt;&lt;script src=\"/path/to/c3.min.js\"&gt;&lt;/script&gt; 이제 준비는 다 끝났으니 다음은 진짜 c3로 그래프를 그리는 작업을 해보자!커밍쑨!","categories":[{"name":"html","slug":"html","permalink":"https://shin-ae.github.io/categories/html/"}],"tags":[{"name":"html, c3, graph, boolio","slug":"html-c3-graph-boolio","permalink":"https://shin-ae.github.io/tags/html-c3-graph-boolio/"}]},{"title":"마크다운문법","slug":"markDown","date":"2017-07-26T12:39:26.000Z","updated":"2017-07-30T06:56:26.332Z","comments":true,"path":"2017/07/26/markDown/","link":"","permalink":"https://shin-ae.github.io/2017/07/26/markDown/","excerpt":"","text":"이 블로그들은 대부분 마크다운 문법으로 만들어 질 것이다. 왜냐하면 포스팅을 하다보면 귀찮기 때문!! 귀찮음의 종착역! 마크다운 문법이란 무엇인가! 마크다운 문법이란? 마크다운 (Markdown)은 마크업 언어의 일종으로, 존 그루버(John Gruber)와 아론 스워츠(Aaron Swartz)가 만들었다. 읽기도 쓰기도 쉽다는 장점이 있다. 그루버는 마크다운으로 작성한 문서를 HTML로 변환하는 펄 스크립트도 만들었다. 확장자는 .md를 쓴다. 라고 한다. 소개받고 쓰면서 느낀 것은 에디터라는 것이다. 글자에 스타일을 부여하는.글씨를 두껍게 하기위해 버튼을 누르던 것을 마크다운에서는 ** 두껍게 **로 바꿀 수 있다. 글을 쓰는 것과 동시에 스타일을 부여할 수 있는 것이 매력적이다. 마크다운문법 사용하기Header 마크다운 실행결과 # h1 h1 ## h2 h2 ### h3 h3 #### h4 h4 ##### h5 h5 blockquote 마크다운 실행결과 &gt; 인용문 인용문 Code Blocks코드블럭은 Back quote 세개를 위아래로 붙여주면 됩니다.~~~코드블럭~~~1코드블럭 인라인코드 마크다운 실행결과 `인라인코드` 인라인코드 강조 마크다운 실행결과 * 기울여쓰기* 기울여쓰기 ** 굵게쓰기 ** 굵게쓰기 수평선-또는 *또는 _을 세개이상 작성 마크다운 실행결과 --- — 링크 마크다운 실행결과 [링크](http://example.com “링크 제목”) 링크 &lt;https://github.com/shin-ae &gt; https://github.com/shin-ae [링크](#id) 링크 리스트순서가 없는 리스트는 *,+,-으로 시작 마크다운 실행결과 - li li 이미지 마크다운 실행결과 ![alt text](/css/images/avatar.png) ![alt text](image_URL) 제외하기특수부호로 이루어져 있는 마크다운 문법이다 보니 쓰고싶은 부호도 못쓰는 경우가 많은데 이럴 때에는 앞뒤로 ‘\\’ 백 슬래쉬를 추가해 주면 된다. 주의할 점은 뒤에 쓰이는 제외할 문자 앞에 쓰여야 한다는 것. 말로하면 어려운데 다음 예제를 보면 이해가 쉽다. 마크다운 실행결과 \\* 강조 \\* * 강조 *","categories":[{"name":"html","slug":"html","permalink":"https://shin-ae.github.io/categories/html/"}],"tags":[{"name":"html, markdown","slug":"html-markdown","permalink":"https://shin-ae.github.io/tags/html-markdown/"}]},{"title":"Hexo 글쓰기","slug":"Hexo-01","date":"2017-07-17T10:05:43.000Z","updated":"2017-07-17T10:35:13.834Z","comments":true,"path":"2017/07/17/Hexo-01/","link":"","permalink":"https://shin-ae.github.io/2017/07/17/Hexo-01/","excerpt":"","text":"헥소 서버 구동헥소는 내장서버를 구동하여 작업물을 확인할 수 있다.방법은 다음 명령어를 터미널에 입력1hexo s s = server를 줄인 명령어로 같은 동작을 수행한다.그러면12INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 라는 결과를 받을 수 있을 것이다.인터넷 브라우저에서 저 주소를 입력하면 블로그 확인이 가능하다. 서버의 구동을 멈추고 싶다면 터미널에서 Ctrl+c를 두번 누르면 간단하게 서버 구동을 끝낼 수 있다. 글쓰기헥소에서는 글을 만들면서 내용을 작성할 수는 없는 것 같다. 우선 터미널에서 새 파일을 생성하면1hexo new &quot;포스트명&quot; source/_posts 에 포스트명으로 만들어진 파일이 생성되는 것을 알 수 있다.헥소에서는 초안 작성이라는 기능도 제공을 하는데 지금 당장 발행하고 싶지 않은 문서는1hexo new draft &quot;포스트명&quot; 으로 만들 수 있다. 이 문서는 source/_drafts안에 생성된다. 이 초안 문서들은 나중에1hexo publish &quot;포스트명&quot; 으로 _posts폴더로 옮겨 보여지게 할 수 있다. deploy내가 포스팅을 끝낼때마다 하는 작업이다.단어 뜻으로는 generate = 생성하다, deploy = 배치하다 인데 git에 연동이 되어 있다면 편하게 쓸 수 있는 기능이라는 것만 알겠다. 우선, git을 연동하는 파일은 _config.yml로 최 상단에 위치한 파일이다.1234deploy: type: git repo: https://github.com/shin-ae/shin-ae.github.io.git branch: master 이렇게 설정하고, 만약 deploer 플러그인이 없어서 작동되지 않는다면1npm install --save hexo-deployer-git 을 사용하여 플러그인을 설치하자.그리고 git에 public파일을 업로드 해준다. 명령어는1hexo g 1hexo d g = generate, d = deploy로 간단하게 줄여서 쓸 수 있다.","categories":[{"name":"blog","slug":"blog","permalink":"https://shin-ae.github.io/categories/blog/"}],"tags":[{"name":"hexo, 블로그 만들기, 글쓰기","slug":"hexo-블로그-만들기-글쓰기","permalink":"https://shin-ae.github.io/tags/hexo-블로그-만들기-글쓰기/"}]},{"title":"Hexo 시작하기","slug":"Hexo-start","date":"2017-07-16T13:05:42.000Z","updated":"2017-07-16T16:09:57.051Z","comments":true,"path":"2017/07/16/Hexo-start/","link":"","permalink":"https://shin-ae.github.io/2017/07/16/Hexo-start/","excerpt":"","text":"네이버 블로그는 있었지만 따로 개인 블로그를 만들고 싶었다. 마침 스터디를 같이 하던 wonny께서도 만들 예정이라고 여러가지를 추천해주심. ruby기반의 Jekyll, hugo, Hexo 등을 살펴보았음. node기반이라는게 맘에 들어 헥소를 프레임워크로 사용하여 블로그를 만들게 되었다. 사전설정헥소를 설치하기 전 몇가지를 미리 설치해야함. node.jsgit NodeJS 는 구글 크롬의 자바스크립트 엔진 (V8 Engine)에 기반해 만들어진 서버 사이드 플랫폼이라고 한다. git은 버전관리 시스템. 일단 이 두가지를 설치하고 나면 다음으로 넘어가도록 하자. 나는 git을 사용하고 있지만 cmd에서 컨트롤 하기 때문에 cmd에서 컨트롤 하는 것을 기본으로 설명하도록 하겠음. Hexo 설치1npm install -g hexo-cli 헥소를 설치 했다면 타켓 의 hexo초기화를 위해 다음을 수행123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 예를들면 나는 c아래에 blog 폴더를 만들어 거기에 헥소를 설치했는데 이럴 경우 123c:\\blog&gt;hexo init blogc:\\blog&gt;cd blogc:\\blog&gt;npm install 이렇게 써내려가면 된다. 이렇게 hexo설치 끝!하지만 끝나도 끝난게 아니기 때문에 다음 포스팅에서는 테마 설치로 돌아오겠음. 커밍쑨~","categories":[{"name":"blog","slug":"blog","permalink":"https://shin-ae.github.io/categories/blog/"}],"tags":[{"name":"hexo, 블로그만들기","slug":"hexo-블로그만들기","permalink":"https://shin-ae.github.io/tags/hexo-블로그만들기/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-07-15T16:55:16.032Z","updated":"2017-07-20T12:40:25.428Z","comments":true,"path":"2017/07/16/hello-world/","link":"","permalink":"https://shin-ae.github.io/2017/07/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}