{"meta":{"title":"shin","subtitle":null,"description":null,"author":"Shinae","url":"https://shin-ae.github.io"},"pages":[],"posts":[{"title":"es6-01","slug":"es6-01","date":"2017-08-20T15:48:56.000Z","updated":"2017-08-21T14:04:00.737Z","comments":true,"path":"2017/08/21/es6-01/","link":"","permalink":"https://shin-ae.github.io/2017/08/21/es6-01/","excerpt":"","text":"변수 선언변수(variable)는 간단히 말해 이름이 붙은 값.기존에는 var만 있었는데 ES6에서는 let 과 const 가 새로 생겼다. 상수(constant)는 변수와 마찮가지로 값을 할당 받을 수는 있지만 한번 할당한 값은 바꿀 수 없는 모양 될 수 있으면 변수보다는 상수를 쓰는게 좋다고 한다. 상수를 사용하면 값을 바꾸지 말아야 할 데이터에서 실수로 값을 바꾸는 일이 줄어든다고 한다.하지만 루프나 시간이 지나면서 값이 바뀌는 가변적인 데이터에는 변수를 써야하는 케이스 바이 케이스. 문자열 병합ES6이전에는 변수나 상수를 문자열 안에 쓰는 방법은 문자열 병합 뿐이었음(+). ES6에서는 문자열 템플릿(template)이라는 기능을 도입. Interpolation이라고 부르기도 함 12let currentTemp = 19.5;const message = \"The current temperature is\" + currentTemp + \"\\u00b0c\"; 기존의 위와 같은 코드를 문자열 병합을 사용하면 12let currentTemp = 19.5;const message = `The current temperature is $&#123;currentTemp&#125; \\u00b0c`; 이렇게 쓸 수 있는데 여기에서 문자열을 감싸고 있는 것은 `백틱(backtick)이라는 것을 명심!중괄호 안에는 어떤 표현식이라도 쓸 수 있다. 여러줄의 문자열에는 이렇게도 쓸 수 있징 1234let currentTemp = 19.5;const multiline = 'Current temperature : \\n' + `\\t$&#123;currentTemp&#125;\\u00b0c\\n` + \"Dont't worry...the heat is on!\"; 문자열 병합을 사용할 때에는 백틱, 따옴표를 섞어서 써도 무방(근데 왜 DOM에는 글씨가 한줄로 나오나…. 콘솔이나 alert에서는 잘 나왔딩ㅜ) symbol심볼은 유일한 토큰을 나타내기 위해 ES6에서 도입한 새로운 데이터 타입.심볼은 항상 유일. 객체와 유사하다. 심볼은 Symbol() 생성자로 만든다. 123const RED = Symbol(\"The color of a sunset!\");const ORANGE = Symbol(\"The color fo a sunset!\");RED === ORANGE //false : 심볼은 모두 서로 다름 우연히 다른 식별자와 혼동해서는 안 되는 고유한 식별자가 필요하다면 심볼을 사용하도록!","categories":[{"name":"html","slug":"html","permalink":"https://shin-ae.github.io/categories/html/"}],"tags":[{"name":"es6, let, const, var","slug":"es6-let-const-var","permalink":"https://shin-ae.github.io/tags/es6-let-const-var/"}]},{"title":"es6_start","slug":"es6-start","date":"2017-08-19T02:39:11.000Z","updated":"2017-08-19T04:41:41.726Z","comments":true,"path":"2017/08/19/es6-start/","link":"","permalink":"https://shin-ae.github.io/2017/08/19/es6-start/","excerpt":"","text":"난관봉착자바스크립트를 쓸 일이 없어서 알고리즘을 공부하고 있다.이번 문제는 무작위 5개의 정수에서 4개를 뽑아 더하는데 그 합이 큰것돠 작은 것을 차례대로 도출하는 알고리즘이었다. 만약 배열이1var arr = [1,2,3,4,5]; 가 되면 최소합 = 1+2+3+4 = 10, 최대합 = 2+3+4+5 = 14 이기 때문에 10 14를 도출하면 됨 그럼 배열에 있는 수를 다 더한 다음에 제일 작은 수를 빼면 최대합이 되고, 제일 큰수를 빼면 최대합이 되는거 아닌가!!! 빙고!! 뭔가 배열 중에 제일 큰 수를 골라낼 메소드가 있을 것이라 생각하고 검색에 들어가기 시작했다. 똑같은 맘, 똑같은 오류일단 w3school에 Math object를 다시 한번 찾아본다. 옳거니 12Math.min(0, 150, 30, 20, -8, -200); // returns -200Math.max(0, 150, 30, 20, -8, -200); // returns 150 이런 방법이 있었다. 그럼 이렇게 하면 되는 것 아닌가.12arr.min()arr.max() 하지만 실패. 검색을 하니 나와 같은 동지를 발견하게 되었다.사람들이 그의 물음에 답변을 해주었는데 생각보다 답이 어려움….ㅁㅎㄷ 동공지진, 그리고 ES6 안타깝게도 내가 배웠던 자바스크립트 중에는 function을 쓰지 않고는 배열에서 가장 큰수, 작은 수를 도출하는 것은 어려워보였다. 1234567 Array.prototype.max = function() &#123; return Math.max.apply(null, this);&#125;;Array.prototype.min = function() &#123; return Math.min.apply(null, this);&#125;; 흠…..좀 더 쉬운 방법이 없을까 하는 중 눈에 띄는 답변 12var min = Math.min( ...arr ), max = Math.max( ...arr ); 세상에 마상에… 이건 ECMAScript 6를 이용한 방법! 마침 ES6에 대해서 공부할 계획이 있었는데 나쁘지 않은 시작이다.","categories":[{"name":"html","slug":"html","permalink":"https://shin-ae.github.io/categories/html/"}],"tags":[{"name":"es6, Math.min, Math.max, array","slug":"es6-Math-min-Math-max-array","permalink":"https://shin-ae.github.io/tags/es6-Math-min-Math-max-array/"}]},{"title":"wix","slug":"wix","date":"2017-08-11T11:31:01.000Z","updated":"2017-08-11T12:12:08.522Z","comments":true,"path":"2017/08/11/wix/","link":"","permalink":"https://shin-ae.github.io/2017/08/11/wix/","excerpt":"","text":"wixwix가 처음 생겼을 때 너무 센세이션이어서 나도 가입을 하고 둘러보기는 했으나 실제로 만들어 본 적은 없었다. 그러던 중 회사에 급하게 영문 홈페이지가 필요해서 간단하게 wix로 홈페이지를 만들기로 결정. 후다닥 만들어 보자.참고로 이번에 제작하게 된 회사 영문페이지는 구체적인 자료보다는 스토리 위주의 글이 많았다. 평소에 하던 작업과는 많이 달라서 여러가지 오프라인 자료들도 많이 참고를 했다. 내가 받았을 때엔 페이지에 들어가야 하는 요소는 다 들어가 있었다.하지만 걍 줄글만 있는 상황 왼쪽에 있는 추가 메뉴이다. 튜토리얼도 끝내지 않고 투입됐지만 그런건 필요 없을 정도로 알기쉽고 간편하다. 요소를 클릭하면 편집 버튼이 나오는데 여기에서 자유로운 편집이 가능하다.클릭 앤 드랙그로 만들어지는 윅스는 바로 볼 수도 있고 저장 후 한꺼번에 개시할 수도 있다. 저장과 개시 기능이 나누어져 있다. 나는 wix를 써서 하루를 채 쓰지 않고 홈페이지 하나를 뚝딱 만들 수 있었다. Wix 괜찮구나 간편한 사용이 가능하다. 드래그 앤 드롭 방식으로 기존에 코딩 방식으로는 한번 더 생각했을 레이아웃도 쉽게 구현할 수 있다. 애니메이션 효과를 클릭한번으로 간편하게 구현할 수 있다. 생각보다 다양한 기본 요소들을 제공하고 있다. 그림을 넣고 글자를 입력하는 것 또한 간편하다. 원한다면 통일된 스타일을 공통 요소에 입힐 수도 있음. 쇼핑몰이나 기타 포맷도 제공하고 있는데 생각보다 wix가 제공하는 틀 안에서 구현한다면 힘들지 않게 사이트 구축이 가능하리라 생각한다. 이런건 별로네 글로만 되어 있는 홈페이지여서 다행이라고 생각. 복잡한 요소가 들어가면 그 결과르 나는 장담하지 못할 것 같다. (복잡한 요소는 어울리지 않는다고 생각) 모바일 반응형 디자인도 제공하고 있는데 완벽하게 되진 않는다. 모바일 버전은 다시한번 손봐줘야 하는 상황.(하지만 이 부분은 기존 코딩 방식이 더 빡셀 것이라 예상) 화면이 축소되지 않고 실제크기에서 작업해야 하기 때문에 간격 위아래로 배치된 요소의 간격 등을 맞추기에는 좀 힘들다. 종합빠르고 내용이 없는 홈페이지를 만들 계획이 있다면 wix도 괜찮은 대안. 하지만 무료일 경우 도메인을 따로 등록하지 못하고 홈페이지 하단에 wix로 만든 홈페이지라고 광고가 따라다닐 것이다. 결제를 해야 특정 url과 광고 free를 얻을 수 있으니 이 점 유념하셔서 작업 허시길!","categories":[{"name":"html","slug":"html","permalink":"https://shin-ae.github.io/categories/html/"}],"tags":[{"name":"wix, 간편하게 홈페이지 만들기, 불리오","slug":"wix-간편하게-홈페이지-만들기-불리오","permalink":"https://shin-ae.github.io/tags/wix-간편하게-홈페이지-만들기-불리오/"}]},{"title":"잡담 01","slug":"etc-01","date":"2017-08-10T11:15:52.000Z","updated":"2017-08-10T11:27:13.793Z","comments":true,"path":"2017/08/10/etc-01/","link":"","permalink":"https://shin-ae.github.io/2017/08/10/etc-01/","excerpt":"","text":"주절주절…디자인 하면서 HTML, CSS를 다룰 수 있는 사람들은 얼마나 많은가….에이전시에 있으면서 그 안에 있던 디자이너들은 모두 퍼블리싱 정도는 할 수 있었다. 별로 특별하게 생각하지 않는다. 그러다보니 jquery도 사용하게 되고 쓰는데 어려움을 느껴 javascript까지 배우게 된다. 스터디 자료를 준비하면서 lodash를 처음 접하면서 cto께 배움을 청하였다. 친절하게 알려주시면서 조언을 해주셨다. 자바스크립트를 너무 깊이 안하셔도 될거 같다고… 필요하다면 lodash같이 편리하게 사용할 수 있는 것들이 있으니 그런것을 활용하고, 거기에 없는 것만 짜보시는 것이 어떻느냐. 복잡하지 않고 단순한 것부터. 그리고 jquery를 같이 쓰면서 눈에 보이면 더 재밌게 하실 수 있으실 거라고. 얘기를 듣고보니 내가 먼길을 돌아온건 아닐까 하는 생각이 든다. 다시 jquery를 살펴보게 되었다. 디자이너의 타이틀을 버리지는 않을 것이다. 그렇게 나는 어디까지 갈 수 있을까. 나는 어디까지 할 수 있을까. 어디로 가야하나…. 다시 초심으로 돌아가서 이것 저것 일단 만들어봐야겠다.","categories":[{"name":"etc","slug":"etc","permalink":"https://shin-ae.github.io/categories/etc/"}],"tags":[{"name":"디자이너, 현타","slug":"디자이너-현타","permalink":"https://shin-ae.github.io/tags/디자이너-현타/"}]},{"title":"제플린의 숫자가 이상하다!","slug":"zeplin-03","date":"2017-08-08T12:26:28.000Z","updated":"2017-08-09T04:32:45.376Z","comments":true,"path":"2017/08/08/zeplin-03/","link":"","permalink":"https://shin-ae.github.io/2017/08/08/zeplin-03/","excerpt":"","text":"문제인식오늘도 신나게 디자인 작업을 하고 제플린에 작업물을 올렸는데 개발자분께서 물어오셨다. 작업 사이즈 어떻게 하셨나요?이상하다. 분명 제플린에 잘 나와있을텐데. 개발자분께서 당연한 것을 물어오실리 만무하니 제플린을 황급히 확인했다. 맙소사 나는 한 페이지를 900x640으로 작업하여 올렸는데 제플린에서는 한페이지에 450x320으로 나와있었다. 딱 반이 되어서 해결방법을 찾기 전까지 개발자분께서는 계산기를 두려 숫자에 2배를 해가며 퍼블리싱을 하시는 사태가 발생했다. 원인제플린에서는 density 즉, 밀도를 선택할 수 있다.1x, 2x로 제공을 하고 2x를 선택할 경우 모든 단위의 숫자가 반토막이 나서 표시되게 된다. 해결이건 단위를 바꾸는 것과 같이 삭제하지 않고 간단하게 클릭 몇번으로 해결 할 수 있다.DASHBOARD화면에서 바꿀 수 있다. 오른쪽 옵션창을 보면 두번째 항목에 Density가 있는데 마우스 오버하면 버튼이 보인다. 여기에서 x1를 선택하면 디자인한데로 단위가 나온다. 정리이 쓸데없는 기능은 무엇인가 하고 생각했지만 쓸모가 있겠지라고 생각해본다.개발자에게 넘기기 전에 density를 한번 더 확인하자.","categories":[{"name":"design","slug":"design","permalink":"https://shin-ae.github.io/categories/design/"}],"tags":[{"name":"zeplin, 제플린, 숫자, 1x, 2x","slug":"zeplin-제플린-숫자-1x-2x","permalink":"https://shin-ae.github.io/tags/zeplin-제플린-숫자-1x-2x/"}]},{"title":"제플린 기본 단위를 바꿔보자!","slug":"zeplin-02","date":"2017-08-08T11:57:44.000Z","updated":"2017-08-09T04:36:38.831Z","comments":true,"path":"2017/08/08/zeplin-02/","link":"","permalink":"https://shin-ae.github.io/2017/08/08/zeplin-02/","excerpt":"","text":"문제인식디자인 작업을 끝내고 제플린에 무사히 Export를 했습니다. 개발자분께도 그 사실을 알려드렸는데 예상 밖의 요청이 들어오게 됩니다. 제플린에 나오는 기본 단위를 바꿔주실 수 있으신가요? 그제서야 확인해보니 제플린에서 기본 단위가 px이 아닌 dp였습니다.아니 세상에 dp라는 단위는 도대체 무엇인가…거기에 폰트 사이즈는 sp였습니다. 세상에 마상에… 일단, dp와 sp에 대해서 알고 가도록 하겠습니다.dp(Density Independent Pixel), sp(Scale-independent Pixel)는 안드로이드에서 나온 단위입니다. 해상도에 관계없이 절대값이던 px과는 달리 해상도에 맞춰 깨지지 않고 나옵니다. 단위에는 dp, text나 line-height같은 글자관련 요소에는 sp를 씁니다. 굳이 단위를 바꿔서 해야 하나는 질문도 있습니다만 일단 바꾸기로 합니다. 원인제플린에서 dp, sp로 단위가 나오는 이유는 처음 제플린에 export를 할때 설정을 잘못해서 그랬습니다. wep을 선택하면 px이 기본으로 나오지만 app을 선택하면 dp와 sp로 단위가 나옵니다.위 그림에서 보시면 프로젝트 화면에서 Android라고 설정되어 있는 것을 볼 수 있습니다. 해결제플린 유료 회원이시면 여러개의 프로젝트를 만들 수 있어서 새로 하나 만들면 됩니다만 무료회원이시라면 프로젝트를 삭제하시고 다시 만드셔야 합니다.제플린에서 Create my first project를 누르시고 type를 설정하시는 창에서 wep을 선택해 줍니다. 그러면 px을 기본으로 하는 프로젝트를 생성할 수 있습니다. 참고로 pt단위를 쓰고 싶으시면 ios를 선택하시면 됩니다. 정리제플린은 중간에 단위를 바꿀 수 없기 때문에 처음에 올리시기 전에 개발자와 단위에 대해서 상의하시는 것이 좋을 것 같습니다. 또한 한 프로젝트에 다양한 단위를 사용할 수는 없으니 필요하다면 제플린 유료 가입도 생각해 보셔야 할 것 같습니다.","categories":[{"name":"design","slug":"design","permalink":"https://shin-ae.github.io/categories/design/"}],"tags":[{"name":"zeplin, 제플린, 단위","slug":"zeplin-제플린-단위","permalink":"https://shin-ae.github.io/tags/zeplin-제플린-단위/"}]},{"title":"제플린에 Export 되지 않는다.","slug":"zeplin-01","date":"2017-08-08T11:24:39.000Z","updated":"2017-08-09T04:32:21.457Z","comments":true,"path":"2017/08/08/zeplin-01/","link":"","permalink":"https://shin-ae.github.io/2017/08/08/zeplin-01/","excerpt":"","text":"문제인식photoshop CC버전에서는 처음 시작할 때 웹, 인쇄, 모바일 등 작업을 선택 할 수 있는데 그것을 선택하지 않고 작업을 했을 시에 제플린에 추가가 되지 않았습니다. 즉, 레이어 단위로는 제플린에 추가가 되지 않는 것이죠. 폴더 단위도 마찮가지 입니다. 원인원인을 찾기 위해 제플린의 확장 창을 봅니다. 제플린의 확장 창은 창 &gt; 확장에서 찾으실 수 있습니다.보시면 No artboard selected되어 있는 것을 볼 수 있습니다.artboard는 대지입니다. 대지가 없어서 제플린에 추가되지 않는 것입니다.참고로 제플린은 CC버전 이상에서 사용하실 수 있는데 CC버전 이하에서는 대지라는 기능이 없으니 당연하다고 할 수 있습니다. 해결해결방법은 간단합니다. 대지를 추가시켜 주시면 됩니다. 대지는 레이어 창에서 추가 하실 수 있습니다.옆에 단추를 누르시고 새대지를 추가하셔서 작업 사이즈에 맞게 조절하시면 됩니다. 정리제플린은 대지 안에 있는 요소들을 인식하여 Export합니다. 제플린으로 개발자와 공유해야 하는 작업이라면 처음에 만드실때 웹이나 앱을 선택하시면 편리하게 작업하실 수 있습니다.","categories":[{"name":"design","slug":"design","permalink":"https://shin-ae.github.io/categories/design/"}],"tags":[{"name":"zeplin, 제플린, 오류, 대지, PsCC","slug":"zeplin-제플린-오류-대지-PsCC","permalink":"https://shin-ae.github.io/tags/zeplin-제플린-오류-대지-PsCC/"}]},{"title":"블로그 본문에서 이미지가 나오지 않는다!","slug":"hexo-img-error","date":"2017-08-05T13:51:31.000Z","updated":"2017-08-05T15:54:54.284Z","comments":true,"path":"2017/08/05/hexo-img-error/","link":"","permalink":"https://shin-ae.github.io/2017/08/05/hexo-img-error/","excerpt":"","text":"바야흐로 c3관련 포스팅을 하고 있을 때…c3작업을 하면서 결과화면을 캡쳐해서 저장했다. hexo s로 봤을 때에는 이미지가 잘 보였는데 deploy를 하고 url로 들어가 봤을 때 안보이는 사태가 발생. 아아..도대체 뭐가 문제인가…일단 들어가 있던 파일을 확인해 보았다. public - css - images 안에 차곡차곡 잘 들어있었다. 태그도 ![기본](/css/images/c3_06.jpg) 이렇게 이쁘게 들어가 있다! 그럼 도대체 뭐가 문제인가!그러다가 이미지의 확장자 명이 JPG 대문자로 쓰여져 있는 것을 보았다. 설마… 했는데 설마가 맞음 ㅎㅎ파일의 확장자 명을 소문자로 바꿀 수 없어서 포스팅의 코드를 ![기본](/css/images/c3_06.JPG) 이렇게 대문자로 고쳤더니 이미지가 나왔다. ㅋㅋ혹시 이런 문제가 있다면 디테일한 확장자명까지 다시한번 살펴보시길!","categories":[{"name":"blog","slug":"blog","permalink":"https://shin-ae.github.io/categories/blog/"}],"tags":[{"name":"hexo, 안나와, 이미지","slug":"hexo-안나와-이미지","permalink":"https://shin-ae.github.io/tags/hexo-안나와-이미지/"}]},{"title":"c3로 그래프 그리기_02","slug":"c3-02","date":"2017-07-30T12:58:31.000Z","updated":"2017-08-02T11:52:34.536Z","comments":true,"path":"2017/07/30/c3-02/","link":"","permalink":"https://shin-ae.github.io/2017/07/30/c3-02/","excerpt":"","text":"C3로 그래프를 그려보자.1_ 저번 포스팅에는 준비를 했으니 이제 그래프를 그려봅니다.다짜고짜 코드를 가져옵니다. 본문에는 차트가 들어갈 div를 마련.1&lt;div id=\"chart\"&gt;&lt;/div&gt; 스크립트 넣는 부분에 적당한 예시의 코드를 가져온다.12345678910var chart = c3.generate(&#123; data: &#123; x: 'x', columns: [ ['x', 30, 50, 100, 230, 300, 310], ['data1', 30, 200, 100, 400, 150, 250], ['data2', 130, 300, 200, 300, 250, 450] ] &#125;&#125;); 전에도 말했지만 c3와 d3는 서버에 올리지 않으면 잘 보이니 않는다. 그래서 바로 에디터에서 서버를 구동해서 볼 수 있는 live server preview 플러그인을 사용했다. (VS code기준) 그러면 이런 모습이 보여지게 된다. 아름답다. 반응형에 데이터 위에 마우스가 오버되었을 때 말풍선도 나온다~ㅇㅁㅇ! 2_ 데이터를 적용해보자데이터를 넣는 방법은 아주 쉽다.1234data: &#123; x: 'x', url: 'data_01.csv'&#125; 데이터를 columns에서 url로 바꾸어주고 저장되어 있는 위치를 써준다. 하지만 이렇게 해서는 아직 그래프가 보여지지 않는다. 3_x축 정의데이터에 X축이 같이 있기 떄문에 x축을 정의해준다. type에는 여러가지가 있는걸까. 암튼 data 레벨에 x축 범위에 대한 axis속성을 추가한다.1234axis: &#123; x: &#123; type: 'category', &#125;, 그러면 이제 이런 모습을 볼 수 있게된다. 4_스타일 바꾸기데이터가 입혀진 그래프를 그렸으니 이제 디자인 파일과 비교하면서 스타일을 다듬으면 된다.일단 데이터 마다 점이 찍혀 있으니 그것을 빼보자.123point: &#123; show: false&#125; 그리고 x,y축의 선이 너무 진한 것 같으니 css에서 선의 색을 조절해보자.12345678910111213.c3 .c3-axis-x path,.c3 .c3-axis-x line &#123; stroke: #ddd;&#125; .c3 .c3-axis-y path,.c3 .c3-axis-y lines &#123; stroke: #ddd;&#125; .c3-ygrid-line.gridGray line &#123; stroke: #ddd;&#125; 데이터 컬러의 색도 바꿀 수 있다. 특정 데이터의 색을 바꿀 수 있지만 간단하게 패턴으로 바꿔본다.123color: &#123; pattern: ['#ff5f00', '#ffe082', '#80deeb', '#c4e0a6', '#bdaba3']&#125; 여기까지 하면 이런 데이터를 볼 수 있다. 5_ 마무리, 포멧 정리이제 거의 다 한 것 같다. 마지막으로 x축과 y축 범위? 단위를 정리해주자.y축의 단위가 %이기때문에 %를 추가해보자.axis아래에 x다음에 추가해주면 된다.1234567 y: &#123; tick: &#123; format: function(d) &#123; return d + \"%\"; &#125; &#125;,&#125; 그리고 x축의 날짜도 다 보여 줄 필요가 없으니 줄일 수 있다. axis의 x에 추가하면 된다.123tick: &#123; count: 7&#125; 마지막으로 y축의 그리드를 추가해줘야 하는데 그리드는 이렇게 추가할 수 있다.12345grid: &#123; y: &#123; show: true &#125;&#125; 그리드가 점선인데다가 여러개가 있어서 상당히 지저분해 보인다.결국 특정 y값을 정해서 그 값의 그리드만 표현하기로.1234567891011121314grid: &#123; y: &#123; lines: [&#123; value: 0, class: 'gridGray' &#125;, &#123; value: 1, class: 'gridGray' &#125;, &#123; value: 2, class: 'gridGray' &#125;] &#125;&#125; 이렇게 되면 그리고자 했던 그래프를 만날 수 있다. 최종 코드는123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt; &lt;style&gt; .c3 .c3-axis-x path, .c3 .c3-axis-x line &#123; stroke: #ddd; &#125; .c3 .c3-axis-y path, .c3 .c3-axis-y lines &#123; stroke: #ddd; &#125; .c3-ygrid-line.gridGray line &#123; stroke: #ddd; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"chart\"&gt;&lt;/div&gt; &lt;script&gt; var chart = c3.generate(&#123; data: &#123; x: 'x', url: 'data_01.csv' &#125;, axis: &#123; x: &#123; type: 'category', tick: &#123; count: 7 &#125; &#125;, y: &#123; tick: &#123; format: function(d) &#123; return d + \"%\"; &#125; &#125;, &#125; &#125;, point: &#123; show: false &#125;, color: &#123; pattern: ['#ff5f00', '#ffe082', '#80deeb', '#c4e0a6', '#bdaba3'] &#125;, grid: &#123; y: &#123; lines: [&#123; value: 0, class: 'gridGray' &#125;, &#123; value: 1, class: 'gridGray' &#125;, &#123; value: 2, class: 'gridGray' &#125;] &#125; &#125; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"html","slug":"html","permalink":"https://shin-ae.github.io/categories/html/"}],"tags":[{"name":"html, c3, graph, boolio","slug":"html-c3-graph-boolio","permalink":"https://shin-ae.github.io/tags/html-c3-graph-boolio/"}]},{"title":"c3로 그래프 그리기_01","slug":"c3","date":"2017-07-30T00:54:23.000Z","updated":"2017-08-02T11:51:57.499Z","comments":true,"path":"2017/07/30/c3/","link":"","permalink":"https://shin-ae.github.io/2017/07/30/c3/","excerpt":"","text":"현재 boolio라는 로보어드바이저의 전체적인 디자인을 담당하고 있다.불리오는 간단히 펀드 자문을 한다고 말할 수 있는데 한달에 한번씩 추천 펀드를 내놓는다.그것이 보고서의 형태로 나가는데 그 안에는 한달 동안의 수익, 추천 펀드, 일정 등이 같이 나가게 된다. 여하튼, 인디자인으로 매달 작업하던 것을 이제는 모바일과 웹 서비스로 자동화 시키는 프로젝트를 진행하고 있다. 그 서비스에 그래프가 존재하는 것은 당연했고, 일러스트로 그리던 그래프를 웹에 옮기는 작업이 필요했다.여태 D3.js를 배우면서 그래프 그리는 연습을 했지만 D3는 자율도가 높은 반면 자바스크립트를 모르는 사람에게는 어느정도의 진입장벽이 존재. D3로 시도는 해보았지만 그래프가 잘 나타나지 않았다. 거기에 반응형으로 디자인을 해야했기 때문에 난감했던 상황. 그 와중에 C3.js라는 D3기반의 좀 더 쉬운 라이브러리를 발견. 썰이 길었다. 이제 준비를 시작하자!1_ C3.js를 살펴보자c3는 나같은 사람들을 위해서 굉장히 쉽다. 기본이 반응형이고 디자인도 깔끔하게 되어있어 많이 손댈 필요도 없다. 다만 d3와 마찮가지로 서버에 올려야 확인이 가능하다는 단점이 있는데 이 부분은 데이터를 다른 파일에서 불러오지 않고 내부에 입력하면 확인 가능하다. 인덱스에서 보면 기본적으로 제공하는 디자인을 볼 수 있다. 깔끔하다.메뉴의 examples에서 보면 다양한 예시의 그래프를 볼 수 있다. c3에서 기본적으로 제공하고 있는 데이터들. 하나하나 들여다 보면 참 심플하고 예쁘다.여기에서 내가 필요했던 것은 라인 그래프! 기본적으로 디자인 파일이 있다면 쓰기 더 쉬워진다. 나는 여태까지 썼던 그래프의 디자인(일러스트로 제작)이 있었기 때문에 그 그래프를 구현해 보기로 했다. 2_ 데이터 정리한번 쓰고 말것이 아니라 매달 써야하기 때문에 나는 데이터 파일을 넣을 수 있는 포맷이 필요했다.일단, 내가 가진 데이터는 엑셀로 있는 파일이었는데 엑셀 파일에서 제일 쉽게 변형할 수 있는 데이터 파일은 .CSV파일이다. 아래로 데이터가 나열되는 형태의 엑셀파일. 다른이름 으로 저장을 누르고 csv파일로 저장을 누른다. 그러면 들어갈 데이터 형태는 준비가 되었다. 3_ 그럼 c3를 코딩해보자.c3는 d3를 기반으로 하고 있기 때문에 d3아래에 위치해야한다. 각 홈페이지에서 받아서 import시켜준다. c3는 스타일시트도 있기 때문에 그것도 받아서 같이 넣어준다.123456&lt;!-- Load c3.css --&gt;&lt;link href=\"/path/to/c3.css\" rel=\"stylesheet\"&gt;&lt;!-- Load d3.js and c3.js --&gt;&lt;script src=\"/path/to/d3.v3.min.js\" charset=\"utf-8\"&gt;&lt;/script&gt;&lt;script src=\"/path/to/c3.min.js\"&gt;&lt;/script&gt; 이제 준비는 다 끝났으니 다음은 진짜 c3로 그래프를 그리는 작업을 해보자!커밍쑨!","categories":[{"name":"html","slug":"html","permalink":"https://shin-ae.github.io/categories/html/"}],"tags":[{"name":"html, c3, graph, boolio","slug":"html-c3-graph-boolio","permalink":"https://shin-ae.github.io/tags/html-c3-graph-boolio/"}]},{"title":"마크다운문법","slug":"markDown","date":"2017-07-26T12:39:26.000Z","updated":"2017-07-30T06:56:26.332Z","comments":true,"path":"2017/07/26/markDown/","link":"","permalink":"https://shin-ae.github.io/2017/07/26/markDown/","excerpt":"","text":"이 블로그들은 대부분 마크다운 문법으로 만들어 질 것이다. 왜냐하면 포스팅을 하다보면 귀찮기 때문!! 귀찮음의 종착역! 마크다운 문법이란 무엇인가! 마크다운 문법이란? 마크다운 (Markdown)은 마크업 언어의 일종으로, 존 그루버(John Gruber)와 아론 스워츠(Aaron Swartz)가 만들었다. 읽기도 쓰기도 쉽다는 장점이 있다. 그루버는 마크다운으로 작성한 문서를 HTML로 변환하는 펄 스크립트도 만들었다. 확장자는 .md를 쓴다. 라고 한다. 소개받고 쓰면서 느낀 것은 에디터라는 것이다. 글자에 스타일을 부여하는.글씨를 두껍게 하기위해 버튼을 누르던 것을 마크다운에서는 ** 두껍게 **로 바꿀 수 있다. 글을 쓰는 것과 동시에 스타일을 부여할 수 있는 것이 매력적이다. 마크다운문법 사용하기Header 마크다운 실행결과 # h1 h1 ## h2 h2 ### h3 h3 #### h4 h4 ##### h5 h5 blockquote 마크다운 실행결과 &gt; 인용문 인용문 Code Blocks코드블럭은 Back quote 세개를 위아래로 붙여주면 됩니다.~~~코드블럭~~~1코드블럭 인라인코드 마크다운 실행결과 `인라인코드` 인라인코드 강조 마크다운 실행결과 * 기울여쓰기* 기울여쓰기 ** 굵게쓰기 ** 굵게쓰기 수평선-또는 *또는 _을 세개이상 작성 마크다운 실행결과 --- — 링크 마크다운 실행결과 [링크](http://example.com “링크 제목”) 링크 &lt;https://github.com/shin-ae &gt; https://github.com/shin-ae [링크](#id) 링크 리스트순서가 없는 리스트는 *,+,-으로 시작 마크다운 실행결과 - li li 이미지 마크다운 실행결과 ![alt text](/css/images/avatar.png) ![alt text](image_URL) 제외하기특수부호로 이루어져 있는 마크다운 문법이다 보니 쓰고싶은 부호도 못쓰는 경우가 많은데 이럴 때에는 앞뒤로 ‘\\’ 백 슬래쉬를 추가해 주면 된다. 주의할 점은 뒤에 쓰이는 제외할 문자 앞에 쓰여야 한다는 것. 말로하면 어려운데 다음 예제를 보면 이해가 쉽다. 마크다운 실행결과 \\* 강조 \\* * 강조 *","categories":[{"name":"html","slug":"html","permalink":"https://shin-ae.github.io/categories/html/"}],"tags":[{"name":"html, markdown","slug":"html-markdown","permalink":"https://shin-ae.github.io/tags/html-markdown/"}]},{"title":"Hexo 글쓰기","slug":"Hexo-01","date":"2017-07-17T10:05:43.000Z","updated":"2017-07-17T10:35:13.834Z","comments":true,"path":"2017/07/17/Hexo-01/","link":"","permalink":"https://shin-ae.github.io/2017/07/17/Hexo-01/","excerpt":"","text":"헥소 서버 구동헥소는 내장서버를 구동하여 작업물을 확인할 수 있다.방법은 다음 명령어를 터미널에 입력1hexo s s = server를 줄인 명령어로 같은 동작을 수행한다.그러면12INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 라는 결과를 받을 수 있을 것이다.인터넷 브라우저에서 저 주소를 입력하면 블로그 확인이 가능하다. 서버의 구동을 멈추고 싶다면 터미널에서 Ctrl+c를 두번 누르면 간단하게 서버 구동을 끝낼 수 있다. 글쓰기헥소에서는 글을 만들면서 내용을 작성할 수는 없는 것 같다. 우선 터미널에서 새 파일을 생성하면1hexo new &quot;포스트명&quot; source/_posts 에 포스트명으로 만들어진 파일이 생성되는 것을 알 수 있다.헥소에서는 초안 작성이라는 기능도 제공을 하는데 지금 당장 발행하고 싶지 않은 문서는1hexo new draft &quot;포스트명&quot; 으로 만들 수 있다. 이 문서는 source/_drafts안에 생성된다. 이 초안 문서들은 나중에1hexo publish &quot;포스트명&quot; 으로 _posts폴더로 옮겨 보여지게 할 수 있다. deploy내가 포스팅을 끝낼때마다 하는 작업이다.단어 뜻으로는 generate = 생성하다, deploy = 배치하다 인데 git에 연동이 되어 있다면 편하게 쓸 수 있는 기능이라는 것만 알겠다. 우선, git을 연동하는 파일은 _config.yml로 최 상단에 위치한 파일이다.1234deploy: type: git repo: https://github.com/shin-ae/shin-ae.github.io.git branch: master 이렇게 설정하고, 만약 deploer 플러그인이 없어서 작동되지 않는다면1npm install --save hexo-deployer-git 을 사용하여 플러그인을 설치하자.그리고 git에 public파일을 업로드 해준다. 명령어는1hexo g 1hexo d g = generate, d = deploy로 간단하게 줄여서 쓸 수 있다.","categories":[{"name":"blog","slug":"blog","permalink":"https://shin-ae.github.io/categories/blog/"}],"tags":[{"name":"hexo, 블로그 만들기, 글쓰기","slug":"hexo-블로그-만들기-글쓰기","permalink":"https://shin-ae.github.io/tags/hexo-블로그-만들기-글쓰기/"}]},{"title":"Hexo 시작하기","slug":"Hexo-start","date":"2017-07-16T13:05:42.000Z","updated":"2017-07-16T16:09:57.051Z","comments":true,"path":"2017/07/16/Hexo-start/","link":"","permalink":"https://shin-ae.github.io/2017/07/16/Hexo-start/","excerpt":"","text":"네이버 블로그는 있었지만 따로 개인 블로그를 만들고 싶었다. 마침 스터디를 같이 하던 wonny께서도 만들 예정이라고 여러가지를 추천해주심. ruby기반의 Jekyll, hugo, Hexo 등을 살펴보았음. node기반이라는게 맘에 들어 헥소를 프레임워크로 사용하여 블로그를 만들게 되었다. 사전설정헥소를 설치하기 전 몇가지를 미리 설치해야함. node.jsgit NodeJS 는 구글 크롬의 자바스크립트 엔진 (V8 Engine)에 기반해 만들어진 서버 사이드 플랫폼이라고 한다. git은 버전관리 시스템. 일단 이 두가지를 설치하고 나면 다음으로 넘어가도록 하자. 나는 git을 사용하고 있지만 cmd에서 컨트롤 하기 때문에 cmd에서 컨트롤 하는 것을 기본으로 설명하도록 하겠음. Hexo 설치1npm install -g hexo-cli 헥소를 설치 했다면 타켓 의 hexo초기화를 위해 다음을 수행123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 예를들면 나는 c아래에 blog 폴더를 만들어 거기에 헥소를 설치했는데 이럴 경우 123c:\\blog&gt;hexo init blogc:\\blog&gt;cd blogc:\\blog&gt;npm install 이렇게 써내려가면 된다. 이렇게 hexo설치 끝!하지만 끝나도 끝난게 아니기 때문에 다음 포스팅에서는 테마 설치로 돌아오겠음. 커밍쑨~","categories":[{"name":"blog","slug":"blog","permalink":"https://shin-ae.github.io/categories/blog/"}],"tags":[{"name":"hexo, 블로그만들기","slug":"hexo-블로그만들기","permalink":"https://shin-ae.github.io/tags/hexo-블로그만들기/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-07-15T16:55:16.032Z","updated":"2017-07-20T12:40:25.428Z","comments":true,"path":"2017/07/16/hello-world/","link":"","permalink":"https://shin-ae.github.io/2017/07/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}